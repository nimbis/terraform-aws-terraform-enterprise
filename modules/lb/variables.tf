### =================================================================== REQUIRED

variable "vpc_id" {
  type        = string
  description = "the ID of the VPC"
}

variable "install_id" {
  type        = string
  description = "the ID of the install"
}

variable "public_subnets" {
  type        = set(string)
  description = "list of public subnets"
}

variable "private_subnets" {
  type        = set(string)
  description = "list of private subnets"
}

variable "public_subnets_cidr_blocks" {
  type        = set(string)
  description = "list of CIDRs for the public subnets"
}

variable "private_subnets_cidr_blocks" {
  type        = set(string)
  description = "list of CIDRs for the private subnets"
}

## `*.${var.domain}` in ACM, `${var.domain}` in route53
variable "domain" {
  type        = string
  description = "this is used to find an existing issued wildcard cert and route53 zone"
}

variable "private_zone" {
  type        = string
  description = "set to true if your route53 zone is private"
  default     = false
}

variable "hostname" {
  type        = string
  description = "hostname to assign to cluster under domain (default is autogenerated one)"
  default     = ""
}

variable "update_route53" {
  type        = string
  description = "indicate if route53 should be updated automatically"
  default     = true
}

variable "cert_arn" {
  type        = string
  description = "Amazon Resource Name (ARN) for Certificate in the ACM you'd like to use (default uses domain or cert_domain to look it up)"
  default     = ""
}

variable "cert_domain" {
  type        = string
  description = "domain to search for ACM certificate with (default is *.domain)"
  default     = ""
}

variable "prefix" {
  type        = string
  description = "Prefix for resources"
}

variable "tags" {
  type        = map(string)
  description = "Map of tags to add to load balancer"
  default     = {}
}

### =================================================================== OPTIONAL

### ======================================================================= MISC

## issued certificate that the lb will be configured to use
data "aws_acm_certificate" "lb" {
  count       = var.cert_domain == "" ? 0 : 1
  domain      = var.cert_domain != "" ? var.cert_domain : "*.${var.domain}"
  statuses    = ["ISSUED"]
  most_recent = true
}

## existing route53 zone where we'll create an alias to the lb
data "aws_route53_zone" "zone" {
  count        = var.update_route53 ? 1 : 0
  name         = var.domain
  private_zone = var.private_zone
}

locals {
  hostname = var.hostname != "" ? var.hostname : "ptfe-${var.install_id}"

  ## https://${local.endpoint}/â€¦
  endpoint = "${local.hostname}.${var.domain}"
}
